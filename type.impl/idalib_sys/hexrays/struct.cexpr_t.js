(function() {
    var type_impls = Object.fromEntries([["idalib_sys",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExternType-for-cexpr_t\" class=\"impl\"><a href=\"#impl-ExternType-for-cexpr_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/extern_type/trait.ExternType.html\" title=\"trait cxx::extern_type::ExternType\">ExternType</a> for <a class=\"struct\" href=\"idalib_sys/hexrays/struct.cexpr_t.html\" title=\"struct idalib_sys::hexrays::cexpr_t\">cexpr_t</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Id\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Id\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\" class=\"associatedtype\">Id</a> = (<a class=\"enum\" href=\"cxx/enum.c.html\" title=\"enum cxx::c\">c</a>, <a class=\"enum\" href=\"cxx/enum.e.html\" title=\"enum cxx::e\">e</a>, <a class=\"enum\" href=\"cxx/enum.x.html\" title=\"enum cxx::x\">x</a>, <a class=\"enum\" href=\"cxx/enum.p.html\" title=\"enum cxx::p\">p</a>, <a class=\"enum\" href=\"cxx/enum.r.html\" title=\"enum cxx::r\">r</a>, <a class=\"enum\" href=\"cxx/enum.__.html\" title=\"enum cxx::__\">__</a>, <a class=\"enum\" href=\"cxx/enum.t.html\" title=\"enum cxx::t\">t</a>)</h4></section></summary><div class='docblock'>A type-level representation of the type’s C++ namespace and type name. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Kind\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Kind\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\" class=\"associatedtype\">Kind</a> = <a class=\"enum\" href=\"cxx/extern_type/kind/enum.Opaque.html\" title=\"enum cxx::extern_type::kind::Opaque\">Opaque</a></h4></section></summary><div class='docblock'>Either <a href=\"cxx/extern_type/kind/enum.Opaque.html\" title=\"enum cxx::extern_type::kind::Opaque\"><code>cxx::kind::Opaque</code></a> or <a href=\"cxx/extern_type/kind/enum.Trivial.html\" title=\"enum cxx::extern_type::kind::Trivial\"><code>cxx::kind::Trivial</code></a>. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\">Read more</a></div></details></div></details>","ExternType","idalib_sys::ffi::cxxbridge::cexpr_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-cexpr_t\" class=\"impl\"><a href=\"#impl-cexpr_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"idalib_sys/hexrays/struct.cexpr_t.html\" title=\"struct idalib_sys::hexrays::cexpr_t\">cexpr_t</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.like_boolean\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/hexrays/struct.cexpr_t.html#tymethod.like_boolean\" class=\"fn\">like_boolean</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_aliasable\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/hexrays/struct.cexpr_t.html#tymethod.is_aliasable\" class=\"fn\">is_aliasable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_value_used\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/hexrays/struct.cexpr_t.html#tymethod.is_value_used\" class=\"fn\">is_value_used</a>(&amp;self, parent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"idalib_sys/hexrays/struct.citem_t.html\" title=\"struct idalib_sys::hexrays::citem_t\">citem_t</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.find_ptr_or_array\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/hexrays/struct.cexpr_t.html#tymethod.find_ptr_or_array\" class=\"fn\">find_ptr_or_array</a>(\n    &amp;self,\n    remove_eqsize_casts: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"idalib_sys/hexrays/struct.cexpr_t.html\" title=\"struct idalib_sys::hexrays::cexpr_t\">cexpr_t</a></h4></section><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/hexrays/struct.cexpr_t.html#tymethod.new\" class=\"fn\">new</a>(mba: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"idalib_sys/hexrays/__impl/struct.mba_t.html\" title=\"struct idalib_sys::hexrays::__impl::mba_t\">mba_t</a>, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"idalib_sys/hexrays/__impl/struct.lvar_t.html\" title=\"struct idalib_sys::hexrays::__impl::lvar_t\">lvar_t</a>) -&gt; Self</h4></section></div></details>",0,"idalib_sys::ffi::cxxbridge::cexpr_t"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5400]}