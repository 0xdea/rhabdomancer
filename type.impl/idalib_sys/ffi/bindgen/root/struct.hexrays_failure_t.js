(function() {
    var type_impls = Object.fromEntries([["idalib_sys",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-Drop-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(self: &amp;mut <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a>)</h4></section></summary><div class=\"docblock\"><p>Synthesized destructor.</p>\n</div></details></div></details>","Drop","idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExternType-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-ExternType-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/extern_type/trait.ExternType.html\" title=\"trait cxx::extern_type::ExternType\">ExternType</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Id\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Id\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\" class=\"associatedtype\">Id</a> = (<a class=\"enum\" href=\"cxx/enum.h.html\" title=\"enum cxx::h\">h</a>, <a class=\"enum\" href=\"cxx/enum.e.html\" title=\"enum cxx::e\">e</a>, <a class=\"enum\" href=\"cxx/enum.x.html\" title=\"enum cxx::x\">x</a>, <a class=\"enum\" href=\"cxx/enum.r.html\" title=\"enum cxx::r\">r</a>, <a class=\"enum\" href=\"cxx/enum.a.html\" title=\"enum cxx::a\">a</a>, <a class=\"enum\" href=\"cxx/enum.y.html\" title=\"enum cxx::y\">y</a>, <a class=\"enum\" href=\"cxx/enum.s.html\" title=\"enum cxx::s\">s</a>, <a class=\"enum\" href=\"cxx/enum.__.html\" title=\"enum cxx::__\">__</a>, <a class=\"enum\" href=\"cxx/enum.f.html\" title=\"enum cxx::f\">f</a>, <a class=\"enum\" href=\"cxx/enum.a.html\" title=\"enum cxx::a\">a</a>, <a class=\"enum\" href=\"cxx/enum.i.html\" title=\"enum cxx::i\">i</a>, <a class=\"enum\" href=\"cxx/enum.l.html\" title=\"enum cxx::l\">l</a>, <a class=\"enum\" href=\"cxx/enum.u.html\" title=\"enum cxx::u\">u</a>, <a class=\"enum\" href=\"cxx/enum.r.html\" title=\"enum cxx::r\">r</a>, <a class=\"enum\" href=\"cxx/enum.e.html\" title=\"enum cxx::e\">e</a>, <a class=\"enum\" href=\"cxx/enum.__.html\" title=\"enum cxx::__\">__</a>, <a class=\"enum\" href=\"cxx/enum.t.html\" title=\"enum cxx::t\">t</a>)</h4></section></summary><div class='docblock'>A type-level representation of the type’s C++ namespace and type name. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Kind\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Kind\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\" class=\"associatedtype\">Kind</a> = <a class=\"enum\" href=\"cxx/extern_type/kind/enum.Opaque.html\" title=\"enum cxx::extern_type::kind::Opaque\">Opaque</a></h4></section></summary><div class='docblock'>Either <a href=\"cxx/extern_type/kind/enum.Opaque.html\" title=\"enum cxx::extern_type::kind::Opaque\"><code>cxx::kind::Opaque</code></a> or <a href=\"cxx/extern_type/kind/enum.Trivial.html\" title=\"enum cxx::extern_type::kind::Trivial\"><code>cxx::kind::Trivial</code></a>. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\">Read more</a></div></details></div></details>","ExternType","idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MakeCppStorage-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-MakeCppStorage-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"moveit/cxx_support/trait.MakeCppStorage.html\" title=\"trait moveit::cxx_support::MakeCppStorage\">MakeCppStorage</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocate_uninitialized_cpp_storage\" class=\"method trait-impl\"><a href=\"#method.allocate_uninitialized_cpp_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"moveit/cxx_support/trait.MakeCppStorage.html#tymethod.allocate_uninitialized_cpp_storage\" class=\"fn\">allocate_uninitialized_cpp_storage</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h4></section></summary><div class='docblock'>Allocates heap space for this type in C++ and return a pointer\nto that space, but do not initialize that space (i.e. do not\nyet call a constructor). <a href=\"moveit/cxx_support/trait.MakeCppStorage.html#tymethod.allocate_uninitialized_cpp_storage\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.free_uninitialized_cpp_storage\" class=\"method trait-impl\"><a href=\"#method.free_uninitialized_cpp_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"moveit/cxx_support/trait.MakeCppStorage.html#tymethod.free_uninitialized_cpp_storage\" class=\"fn\">free_uninitialized_cpp_storage</a>(arg0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a>)</h4></section></summary><div class='docblock'>Frees a C++ allocation which has not yet\nhad a constructor called. <a href=\"moveit/cxx_support/trait.MakeCppStorage.html#tymethod.free_uninitialized_cpp_storage\">Read more</a></div></details></div></details>","MakeCppStorage","idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.desc\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html#tymethod.desc\" class=\"fn\">desc</a>(\n    self: &amp;<a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a>,\n) -&gt; <a class=\"struct\" href=\"cxx/unique_ptr/struct.UniquePtr.html\" title=\"struct cxx::unique_ptr::UniquePtr\">UniquePtr</a>&lt;<a class=\"struct\" href=\"idalib_sys/ffi/cxxbridge/struct.qstring_char_AutocxxConcrete.html\" title=\"struct idalib_sys::ffi::cxxbridge::qstring_char_AutocxxConcrete\">qstring_char_AutocxxConcrete</a>&gt;</h4></section><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html#tymethod.new\" class=\"fn\">new</a>() -&gt; impl <a class=\"trait\" href=\"moveit/new/trait.New.html\" title=\"trait moveit::new::New\">New</a>&lt;Output = Self&gt;</h4></section><section id=\"method.new1\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html#tymethod.new1\" class=\"fn\">new1</a>(\n    c: <a class=\"enum\" href=\"idalib_sys/ffi/bindgen/root/enum.merror_t.html\" title=\"enum idalib_sys::ffi::bindgen::root::merror_t\">merror_t</a>,\n    ea: <a class=\"struct\" href=\"autocxx/struct.c_ulonglong.html\" title=\"struct autocxx::c_ulonglong\">c_ulonglong</a>,\n    buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/std/os/raw/type.c_char.html\" title=\"type std::os::raw::c_char\">c_char</a>,\n) -&gt; impl <a class=\"trait\" href=\"moveit/new/trait.New.html\" title=\"trait moveit::new::New\">New</a>&lt;Output = Self&gt;</h4></section><section id=\"method.new2\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html#tymethod.new2\" class=\"fn\">new2</a>&lt;'a&gt;(\n    c: <a class=\"enum\" href=\"idalib_sys/ffi/bindgen/root/enum.merror_t.html\" title=\"enum idalib_sys::ffi::bindgen::root::merror_t\">merror_t</a>,\n    ea: <a class=\"struct\" href=\"autocxx/struct.c_ulonglong.html\" title=\"struct autocxx::c_ulonglong\">c_ulonglong</a>,\n    buf: &amp;'a <a class=\"struct\" href=\"idalib_sys/ffi/cxxbridge/struct.qstring_char_AutocxxConcrete.html\" title=\"struct idalib_sys::ffi::cxxbridge::qstring_char_AutocxxConcrete\">qstring_char_AutocxxConcrete</a>,\n) -&gt; impl <a class=\"trait\" href=\"moveit/new/trait.New.html\" title=\"trait moveit::new::New\">New</a>&lt;Output = Self&gt; + 'a</h4></section></div></details>",0,"idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<section id=\"impl-SharedPtrTarget-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-SharedPtrTarget-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/shared_ptr/trait.SharedPtrTarget.html\" title=\"trait cxx::shared_ptr::SharedPtrTarget\">SharedPtrTarget</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section>","SharedPtrTarget","idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<section id=\"impl-UniquePtrTarget-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-UniquePtrTarget-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/unique_ptr/trait.UniquePtrTarget.html\" title=\"trait cxx::unique_ptr::UniquePtrTarget\">UniquePtrTarget</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section>","UniquePtrTarget","idalib_sys::ffi::cxxbridge::hexrays_failure_t"],["<section id=\"impl-WeakPtrTarget-for-hexrays_failure_t\" class=\"impl\"><a href=\"#impl-WeakPtrTarget-for-hexrays_failure_t\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/weak_ptr/trait.WeakPtrTarget.html\" title=\"trait cxx::weak_ptr::WeakPtrTarget\">WeakPtrTarget</a> for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.hexrays_failure_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::hexrays_failure_t\">hexrays_failure_t</a></h3></section>","WeakPtrTarget","idalib_sys::ffi::cxxbridge::hexrays_failure_t"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[12200]}