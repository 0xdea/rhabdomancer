(function() {
    var type_impls = Object.fromEntries([["idalib_sys",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExternType-for-c_void\" class=\"impl\"><a class=\"src rightside\" href=\"src/autocxx/lib.rs.html#476\">Source</a><a href=\"#impl-ExternType-for-c_void\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cxx/extern_type/trait.ExternType.html\" title=\"trait cxx::extern_type::ExternType\">ExternType</a> for <a class=\"struct\" href=\"autocxx/struct.c_void.html\" title=\"struct autocxx::c_void\">c_void</a></h3></section></summary><div class=\"docblock\"><h4 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h4>\n<p>We assert that the namespace and type ID refer to a C++\ntype which is equivalent to this Rust type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Id\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/autocxx/lib.rs.html#477\">Source</a><a href=\"#associatedtype.Id\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\" class=\"associatedtype\">Id</a> = (<a class=\"enum\" href=\"cxx/enum.c.html\" title=\"enum cxx::c\">c</a>, <a class=\"enum\" href=\"cxx/enum.__.html\" title=\"enum cxx::__\">__</a>, <a class=\"enum\" href=\"cxx/enum.v.html\" title=\"enum cxx::v\">v</a>, <a class=\"enum\" href=\"cxx/enum.o.html\" title=\"enum cxx::o\">o</a>, <a class=\"enum\" href=\"cxx/enum.i.html\" title=\"enum cxx::i\">i</a>, <a class=\"enum\" href=\"cxx/enum.d.html\" title=\"enum cxx::d\">d</a>)</h4></section></summary><div class='docblock'>A type-level representation of the type’s C++ namespace and type name. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Id\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Kind\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/autocxx/lib.rs.html#478\">Source</a><a href=\"#associatedtype.Kind\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\" class=\"associatedtype\">Kind</a> = <a class=\"enum\" href=\"cxx/extern_type/kind/enum.Trivial.html\" title=\"enum cxx::extern_type::kind::Trivial\">Trivial</a></h4></section></summary><div class='docblock'>Either <a href=\"cxx/extern_type/kind/enum.Opaque.html\" title=\"enum cxx::extern_type::kind::Opaque\"><code>cxx::kind::Opaque</code></a> or <a href=\"cxx/extern_type/kind/enum.Trivial.html\" title=\"enum cxx::extern_type::kind::Trivial\"><code>cxx::kind::Trivial</code></a>. <a href=\"cxx/extern_type/trait.ExternType.html#associatedtype.Kind\">Read more</a></div></details></div></details>","ExternType","idalib_sys::ffi::cxxbridge::c_void"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2818]}