(function() {
    var implementors = Object.fromEntries([["anyhow",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt; for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt; for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>"]]],["cxxbridge_macro",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"cxxbridge_macro/syntax/atom/enum.Atom.html\" title=\"enum cxxbridge_macro::syntax::atom::Atom\">Atom</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"cxxbridge_macro/syntax/derive/enum.Trait.html\" title=\"enum cxxbridge_macro::syntax::derive::Trait\">Trait</a>"]]],["idalib",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"idalib/license/struct.LicenseId.html\" title=\"struct idalib::license::LicenseId\">LicenseId</a>"]]],["idalib_sys",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.range_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::range_t\">range_t</a>&gt; for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.func_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::func_t\">func_t</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.range_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::range_t\">range_t</a>&gt; for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.qbasic_block_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::qbasic_block_t\">qbasic_block_t</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.range_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::range_t\">range_t</a>&gt; for <a class=\"struct\" href=\"idalib_sys/ffi/bindgen/root/struct.segment_t.html\" title=\"struct idalib_sys::ffi::bindgen::root::segment_t\">segment_t</a>"]]],["regex_syntax",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>"]]],["serde",[]],["serde_derive",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>&gt; for <a class=\"enum\" href=\"serde_derive/fragment/enum.Fragment.html\" title=\"enum serde_derive::fragment::Fragment\">Fragment</a>"]]],["serde_spanned",[["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"serde_spanned/spanned/struct.Spanned.html\" title=\"struct serde_spanned::spanned::Spanned\">Spanned</a>&lt;T&gt;"]]],["toml_edit",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"toml_edit/internal_string/struct.InternalString.html\" title=\"struct toml_edit::internal_string::InternalString\">InternalString</a>"]]],["winnow",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"winnow/stream/bstr/struct.BStr.html\" title=\"struct winnow::stream::bstr::BStr\">BStr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"winnow/stream/bytes/struct.Bytes.html\" title=\"struct winnow::stream::bytes::Bytes\">Bytes</a>"],["impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;I&gt; for <a class=\"struct\" href=\"winnow/stream/locating/struct.LocatingSlice.html\" title=\"struct winnow::stream::locating::LocatingSlice\">LocatingSlice</a>&lt;I&gt;"],["impl&lt;I, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;I&gt; for <a class=\"struct\" href=\"winnow/stream/stateful/struct.Stateful.html\" title=\"struct winnow::stream::stateful::Stateful\">Stateful</a>&lt;I, S&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1064,797,391,1391,412,13,429,330,431,2913]}